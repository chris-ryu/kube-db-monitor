apiVersion: v1
kind: Namespace
metadata:
  name: kubedb-monitor-system
  labels:
    name: kubedb-monitor-system

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubedb-monitor-controller
  namespace: kubedb-monitor-system
  labels:
    app: kubedb-monitor-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubedb-monitor-controller
  template:
    metadata:
      labels:
        app: kubedb-monitor-controller
    spec:
      serviceAccountName: kubedb-monitor-controller
      containers:
      - name: controller
        image: registry.bitgaram.info/kubedb-monitor/controller:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8443
          name: webhook
        - containerPort: 8080
          name: metrics
        env:
        - name: WEBHOOK_PORT
          value: "8443"
        - name: METRICS_PORT
          value: "8080"
        - name: LOG_LEVEL
          value: "DEBUG"
        volumeMounts:
        - name: webhook-certs
          mountPath: /etc/certs
          readOnly: true
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: webhook-certs
        secret:
          secretName: kubedb-webhook-certs
      imagePullSecrets:
      - name: registry-secret

---
apiVersion: v1
kind: Service
metadata:
  name: kubedb-monitor-webhook-service
  namespace: kubedb-monitor-system
  labels:
    app: kubedb-monitor-controller
spec:
  ports:
  - name: webhook
    port: 443
    targetPort: 8443
  - name: metrics
    port: 8080
    targetPort: 8080
  selector:
    app: kubedb-monitor-controller

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubedb-monitor-controller
  namespace: kubedb-monitor-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb-monitor-controller
rules:
- apiGroups: [""]
  resources: ["pods", "namespaces"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["mutatingadmissionwebhooks", "validatingadmissionwebhooks"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubedb-monitor-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubedb-monitor-controller
subjects:
- kind: ServiceAccount
  name: kubedb-monitor-controller
  namespace: kubedb-monitor-system