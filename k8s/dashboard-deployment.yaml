apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubedb-monitor-dashboard
  namespace: kubedb-monitor
  labels:
    app: kubedb-monitor-dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubedb-monitor-dashboard
  template:
    metadata:
      labels:
        app: kubedb-monitor-dashboard
    spec:
      imagePullSecrets:
      - name: registry-secret
      containers:
      - name: dashboard
        image: registry.bitgaram.info/kubedb-monitor/dashboard-frontend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: CONTROL_PLANE_URL
          value: "ws://kubedb-monitor-control-plane:8080"
        - name: WEBSOCKET_URL
          value: "wss://kube-db-mon-dashboard.bitgaram.info/ws"
        - name: NEXT_PUBLIC_LONG_RUNNING_THRESHOLD_MS
          value: "4000"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 5

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubedb-monitor-control-plane
  namespace: kubedb-monitor
  labels:
    app: kubedb-monitor-control-plane
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubedb-monitor-control-plane
  template:
    metadata:
      labels:
        app: kubedb-monitor-control-plane
    spec:
      imagePullSecrets:
      - name: registry-secret
      containers:
      - name: control-plane
        image: registry.bitgaram.info/kube-db-monitor-control-plane:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: kubedb-monitor-dashboard
  namespace: kubedb-monitor
  labels:
    app: kubedb-monitor-dashboard
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: kubedb-monitor-dashboard

---
apiVersion: v1
kind: Service
metadata:
  name: kubedb-monitor-control-plane
  namespace: kubedb-monitor
  labels:
    app: kubedb-monitor-control-plane
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: kubedb-monitor-control-plane