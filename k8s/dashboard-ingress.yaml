apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kubedb-monitor-dashboard-ingress
  namespace: kubedb-monitor
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    # WebSocket and API support for control plane
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/server-snippets: |
      location /ws {
        proxy_pass http://kubedb-monitor-control-plane.kubedb-monitor.svc.cluster.local:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400;
      }
      location /api/control-plane/ {
        proxy_pass http://kubedb-monitor-control-plane.kubedb-monitor.svc.cluster.local:8080/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
      }
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - kube-db-mon-dashboard.bitgaram.info
    secretName: kube-db-mon-dashboard-tls
  rules:
  - host: kube-db-mon-dashboard.bitgaram.info
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kubedb-monitor-dashboard
            port:
              number: 3000